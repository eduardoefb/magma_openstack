---
# tasks file for 01-update
  - include_vars: "{{ playbook_dir }}/vars.yml" 

  - name: Update 
    become: true
    apt:
      name: '*'
      state: 'latest'
      update_cache: yes
    register: apt_res
    retries: 300
    delay: 10
    until: apt_res is success 

  - name: Install the required packages
    become: true
    apt:
      pkg:
        - git 
        - curl  
        - python3-venv 
        - wget
        - xvfb 
        - python3-xvfbwrapper
        - libgtk-3-0
        - libdbus-glib-1-2
        - firefox-esr 
        - python3-pip 
        - python3-selenium

  - name: geckodriver
    become: true
    unarchive:
      src: https://github.com/mozilla/geckodriver/releases/download/v0.30.0/geckodriver-v0.30.0-linux64.tar.gz
      dest: /usr/local/bin
      owner: root
      group: root
      mode: '0755'
      remote_src: true 

  - name: Install Python packages
    pip:
      name:
        - pyaml
        - filetype
        - mouse
      executable: pip3

  - name: Check if reboot required
    become: true
    stat:
      path: /var/run/reboot-required
    register: reboot_required_file  
  
  - name: Notify reboot
    shell: echo "reboot"  > /tmp/reboot
    when: reboot_required_file.stat.exists == true    
    notify: reboot

  - name: Create directory
    become: true
    file:
      path: /usr/local/share/ca-certificates/extra/
      state: directory

  - name: Transfer the ca certificate
    become: true
    copy:
      src: "{{ playbook_dir }}/certs/rootCA.pem" 
      dest: /usr/local/share/ca-certificates/extra/rootCA.crt

  - name: Update ca trusted list
    become: true
    shell: |
      /usr/sbin/update-ca-certificates
    args:
      executable: /bin/bash

  - name: Install required packages for nfs
    become: true
    apt:
      name: "{{ packages }}"
      state: latest
    vars:
      packages:
        - nfs-kernel-server 
        - rsync
    register: apt_res
    retries: 300
    delay: 10
    until: apt_res is success              

  - name: Install kubectl 
    become: true
    shell: |
        if [ ! -f "/usr/local/bin/kubectl" ]; then
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          mv kubectl /usr/local/bin/
          chmod +x /usr/local/bin/kubectl
        fi

  
  - name: Download helm
    become: true
    unarchive:
      src: https://get.helm.sh/helm-v3.2.1-linux-amd64.tar.gz 
      dest: /tmp/
      remote_src: yes  


  - name: Move helm binary to /usr/local/bin/
    become: true
    copy:
      src: /tmp/linux-amd64/helm
      dest: /usr/local/bin/helm
      mode: 'a+x'
      remote_src: yes

  