---
# tasks file for 01-image_builder
- include_vars: "{{ playbook_dir }}/vars.yml" 
- include_vars: "{{ playbook_dir }}/magma_config.yml"  


- name: Configure /etc/resolv.conf
  shell: |
    ln -sf /var/run/systemd/resolve/resolv.conf /etc/resolv.conf
    sed -i 's/#DNS=/DNS=8.8.8.8 208.67.222.222/' /etc/systemd/resolved.conf
    service systemd-resolved restart
    
- name: Get first interface
  shell: |
    interfaces=($(ip link | grep --color -oP '(?<=\d:\s)(.*)(?=:\s<)' | grep -v lo))
    echo ${interfaces[0]}
  register: eth0
  args: 
    executable: /bin/bash

- name: Create configuration file for UEs
  template: 
    src: ue.conf.j2
    dest: "/root/opencells-mods/{{ item.imsi }}.conf"
    owner: root 
    group: root 
    mode: '744'
  vars:
    ueind: "{{ item }}"
  loop:
    "{{ magma.subscribers }}"

- name: Clear subscribers directory
  file:
    path: /opt/subscribers
    state: absent

- name: Clear subscribers directory
  file:
    path: /opt/subscribers
    state: directory

- name: Clear subscribers directory
  file:
    path: "/opt/subscribers/{{ item.imsi }}"
    state: directory
  loop:
    "{{ magma.subscribers }}" 

- name: Generating sim for UEs
  shell: |
    cd /opt/subscribers/{{ item.imsi }}
    /root/openairinterface5g/cmake_targets/nas_sim_tools/build/conf2uedata -c/root/opencells-mods/{{ item.imsi }}.conf -o .
  args:
    executable: /bin/bash      
  loop:
    "{{ magma.subscribers }}"      
       
- name: Define a default subscriber
  file:
    dest: /opt/subscribers/default
    src: "/opt/subscribers/{{ magma.subscribers[0].imsi }}"
    state: link
    force: yes


- name: Create script 
  template:
    src: ue.sh.j2
    dest: /usr/local/bin/ue.sh
    mode: '755'

- name: Define the service
  template:
    src: ue.service.j2
    dest: /etc/systemd/system/ue.service

- name: Reload systemd configuration
  become: true
  systemd:
    daemon_reload: yes

- name: Enable and start ue service
  become: true
  systemd:
    name: ue.service
    enabled: yes
    state: restarted    



